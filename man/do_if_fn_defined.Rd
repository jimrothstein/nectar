% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{do_if_fn_defined}
\alias{do_if_fn_defined}
\title{Use a provided function}
\usage{
do_if_fn_defined(x, fn = NULL, ...)
}
\arguments{
\item{x}{An object to potentially modify, such as a \code{\link[httr2:request]{httr2::request()}}
object.}

\item{fn}{A function to apply to \code{x}. If \code{fn} is \code{NULL}, \code{x} is returned
unchanged.}

\item{...}{Additional arguments to pass to \code{fn}.}
}
\value{
The object, potentially modified.
}
\description{
When constructing API calls programmatically, you may encounter situations
where an upstream task should indicate which function to apply. For example,
one endpoint might use a special security function that isn't used by other
endpoints. This function exists to make coding such situations easier.
}
\examples{
build_api_req <- function(endpoint, security_fn = NULL, ...) {
  req <- httr2::request("https://example.com")
  req <- httr2::req_url_path_append(req, endpoint)
  do_if_fn_defined(req, security_fn, ...)
}

# Most endpoints of this API do not require authentication.
unsecure_req <- build_api_req("unsecure_endpoint")
unsecure_req$headers

# But one endpoint requires
secure_req <- build_api_req(
  "secure_endpoint", httr2::req_auth_bearer_token, "secret-token"
)
secure_req$headers$Authorization
}
